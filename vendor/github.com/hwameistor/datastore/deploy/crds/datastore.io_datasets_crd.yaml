apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: datasets.datastore.io
spec:
  group: datastore.io
  names:
    kind: DataSet
    listKind: DataSetList
    plural: datasets
    shortNames:
    - dsrc
    singular: dataset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .status.lastRefreshTime
      name: LastRefreshTime
      type: date
    - jsonPath: .spec.refresh
      name: Refresh
      priority: 1
      type: boolean
    - jsonPath: .status.refreshCount
      name: RefreshCount
      priority: 1
      type: integer
    - jsonPath: .status.connected
      name: Connected
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.error
      name: Error
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataSet is the Schema for the DataSets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataSetSpec defines the desired state of DataSet
            properties:
              capacityBytes:
                format: int64
                type: integer
              ftp:
                properties:
                  dir:
                    default: /
                    type: string
                  endpoint:
                    type: string
                  password:
                    type: string
                  user:
                    type: string
                required:
                - dir
                - password
                - user
                type: object
              minio:
                properties:
                  accessKey:
                    type: string
                  bucket:
                    type: string
                  endpoint:
                    type: string
                  prefix:
                    type: string
                  region:
                    type: string
                  secretKey:
                    type: string
                required:
                - accessKey
                - bucket
                - secretKey
                type: object
              nfs:
                properties:
                  endpoint:
                    type: string
                  export:
                    type: string
                  rootdir:
                    default: .
                    type: string
                required:
                - export
                - rootdir
                type: object
              refresh:
                default: true
                description: indicate if refresh data or not
                type: boolean
              type:
                default: unknown
                description: type of data source
                enum:
                - minio
                - aws-s3
                - nfs
                - ftp
                - unknown
                type: string
            required:
            - refresh
            - type
            type: object
          status:
            description: DataSetStatus defines the observed state of DataSet
            properties:
              connected:
                default: false
                description: is the data source connected or accessible?
                type: boolean
              error:
                description: any error message
                type: string
              lastRefreshTime:
                description: last time to refresh the data from the backend
                format: date-time
                type: string
              refreshCount:
                default: 0
                description: how many time the data of backend have been refreshed
                type: integer
            required:
            - connected
            - refreshCount
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
